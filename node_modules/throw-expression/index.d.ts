/**
 * Throws an error when called
 * @param error either error object or a string
 */
export declare const Throw: (error: string | Error) => never;
/**
 * Throw exception if value is null
 * @param value value to be checked for null
 * @param error either error object or a string
 */
export declare const throwIfNull: <T>(value: T | null, error?: string | Error) => T;
/**
 * Throw exception if value is undefined
 * @param value value to be checked for undefined
 * @param error either error object or a string
 */
export declare const throwIfUndefined: <T>(value: T | undefined, error?: string | Error) => T;
/**
 * Throw exception if value is null or undefined
 * @param value value to be checked for null or undefined
 * @param error either error object or a string
 */
export declare const throwIfFalsy: <T>(value: T, error?: string | Error) => NonNullable<T>;
